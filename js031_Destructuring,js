//Destructuring (구조 분해 할당)
// : 디스트럭쳐링은 structuring (구조화)된 배열 또는 객채를 비구조화 하여 개별적으로 변수에 할당하는 개념이다

let level = [5, 10];
let a, b;
a = level[0];
b = level[1];
console.log(`a=${a},b=${b}`);

let c, d;
[c, d] = [5, 10];
console.log(`c=${c},d=${d}`);

let m, n;
[n, m] = [c, d];
console.log(`n=${n},m=${m}`);

let k, p, next;
[k, p, next] = [1, 2, 3, 4, 5, 6, 7, 8];
console.log(`k=${k}`);
console.log(`p=${p}`);
console.log(`next=${next}`);

[k, p, ...next] = [1, 2, 3, 4, 5, 6, 7, 8];
console.log(`k=${k}`);
console.log(`p=${p}`);
console.log(`next=${next}`);
/*[k, , p, , ...next] = [1, 2, 3, 4, 5, 6, 7, 8];
console.log(`k=${k}`);
console.log(`p=${p}`);
console.log(`next=${next}`);
*/

[k, _, p, _, ...next] = [1, 2, 3, 4, 5, 6, 7, 8];
console.log(`k=${k}`);
console.log(`p=${p}`);
console.log(`next=${next}`);

let u, t, w;
[u, t, w] = [1, 2];
console.log(`u=${u}`);
console.log(`t=${t}`);
console.log(`w=${w}`);

[u, t = 4, w = 5] = [1, 2];
console.log(`u=${u} t=${t} w=${w} `);

//2. 객체 Destructuring 구조 분해할당

const customer = { fullname: "고수", job: "연기자" };
let fullname = customer.fullname;
let job = customer.job;
console.log(`fullname: ${fullname}, job : ${job}`); //fullname: 고수, job : 연기자

let { fullname: fn, job: jb } = customer;
console.log(`fullname: ${fn}, job : ${jb}`); //fullname: 고수, job : 연기자

let { job: work, fullname: fname } = customer;
console.log(`job:${work},fullname:${fname}`); //job:연기자,fullname:고수

let { fullname: name, job: jbn, loc = "서울" } = customer;
console.log(`fullname:${name},job:${jbn},loc:${loc}`);

let s, r;
({ s, r } = { s: 1, r: 2 });
console.log(`s=${s} r=${r}`); //s=1 r=2

/////////////////////////////////////////////////////////////////////////////////////////

let habits = [
  { id: 1, content: "수영", completed: false },
  { id: 2, content: "걷기", completed: true },
  { id: 3, content: "명상", completed: true },
  { id: 4, content: "독서", completed: false },
];

for (let i = 0; i < habits.length; i++) {
  if (habits[i].completed == true) {
    console.log(habits[i]);
  }
}
///////////////////////////
let completedHabit = habits.filter((Element) => {
  return Element.completed;
});
console.log(completedHabit);

//member 변수에서 데이터를 추출하여 고수 고객님은 서울에
//거주합니다.

let member = {
  hname: "고수",
  address: { zipCode: "526-143", city: "서울" },
};
console.log(`${member.hname}고객님은 ${member.address.city}에 거주합니다.`);
///////////////////////////////////////////////////////////////////////////////////
